{"name": "test_search", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 10.0s, while waiting for:\nbrowser.element(('name', 'Appium')).click\n\nReason: InvalidSelectorException: Locator Strategy 'name' is not supported for this session; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nScreenshot: file://C:\\Users\\Андрей\\.selene\\screenshots\\1737572957702\\1737572957702.png\nPageSource: file://C:\\Users\\Андрей\\.selene\\screenshots\\1737572957702\\1737572957702.html", "trace": "fn = <selene.core.wait.Command object at 0x0000024EC4937F20>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n\n..\\..\\.venv\\Lib\\site-packages\\selene\\core\\wait.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\.venv\\Lib\\site-packages\\selene\\core\\wait.py:61: in __call__\n    return self._fn(entity)\n..\\..\\.venv\\Lib\\site-packages\\selene\\core\\entity.py:525: in raw_click\n    element.locate().click()\n..\\..\\.venv\\Lib\\site-packages\\selene\\core\\entity.py:185: in locate\n    return self._locator()\n..\\..\\.venv\\Lib\\site-packages\\selene\\core\\locator.py:34: in __call__\n    return self._locate()\n..\\..\\.venv\\Lib\\site-packages\\selene\\core\\_browser.py:71: in <lambda>\n    Locator(f'{self}.element({by})', lambda: self.driver.find_element(*by)),\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:888: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x0000024EC49E46E0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"Locator Strategy \\'name\\' is not supported f...re/a4f03fnyb1njsg95d11hrirds8hfjsc1-appium-1.17.0/node_modules/appium-base-driver/lib/protocol/protocol.js:309:21)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        https://www.w3.org/TR/webdriver/#errors\n        \"\"\"\n        payload = response.get('value', '')\n        if isinstance(payload, dict):\n            payload_dict = payload\n        else:\n            try:\n                payload_dict = json.loads(payload)\n            except (json.JSONDecodeError, TypeError):\n                return\n            if not isinstance(payload_dict, dict):\n                return\n        value = payload_dict.get('value')\n        if not isinstance(value, dict):\n            return\n        error = value.get('error')\n        if not error:\n            return\n    \n        message = value.get('message', error)\n        stacktrace = value.get('stacktrace', '')\n        # In theory, we should also be checking HTTP status codes.\n        # Java client, for example, prints a warning if the actual `error`\n        # value does not match to the response's HTTP status code.\n        exception_class: Type[sel_exceptions.WebDriverException] = ERROR_TO_EXC_MAPPING.get(\n            error, sel_exceptions.WebDriverException\n        )\n        if exception_class is sel_exceptions.WebDriverException and message:\n            if message == 'No such context found.':\n                exception_class = appium_exceptions.NoSuchContextException\n            elif message == 'That command could not be executed in the current context.':\n                exception_class = appium_exceptions.InvalidSwitchToTargetException\n    \n        if exception_class is sel_exceptions.UnexpectedAlertPresentException:\n            raise sel_exceptions.UnexpectedAlertPresentException(\n                msg=message,\n                stacktrace=format_stacktrace(stacktrace),\n                alert_text=value.get('data'),\n            )\n>       raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\nE       selenium.common.exceptions.InvalidSelectorException: Message: Locator Strategy 'name' is not supported for this session; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE       Stacktrace:\nE       InvalidSelectorError: Locator Strategy 'name' is not supported for this session\nE           at AndroidUiautomator2Driver.validateLocatorStrategy (/nix/store/a4f03fnyb1njsg95d11hrirds8hfjsc1-appium-1.17.0/node_modules/appium-uiautomator2-driver/node_modules/appium-base-driver/lib/basedriver/driver.js:388:13)\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (/nix/store/a4f03fnyb1njsg95d11hrirds8hfjsc1-appium-1.17.0/node_modules/appium-uiautomator2-driver/node_modules/appium-base-driver/lib/basedriver/commands/find.js:31:8)\nE           at AndroidUiautomator2Driver.findElement (/nix/store/a4f03fnyb1njsg95d11hrirds8hfjsc1-appium-1.17.0/node_modules/appium-uiautomator2-driver/node_modules/appium-base-driver/lib/basedriver/commands/find.js:53:21)\nE           at commandExecutor (/nix/store/a4f03fnyb1njsg95d11hrirds8hfjsc1-appium-1.17.0/node_modules/appium-uiautomator2-driver/node_modules/appium-base-driver/lib/basedriver/driver.js:330:9)\nE           at /nix/store/a4f03fnyb1njsg95d11hrirds8hfjsc1-appium-1.17.0/node_modules/appium-uiautomator2-driver/node_modules/async-lock/lib/index.js:125:12\nE           at AsyncLock._promiseTry (/nix/store/a4f03fnyb1njsg95d11hrirds8hfjsc1-appium-1.17.0/node_modules/appium-uiautomator2-driver/node_modules/async-lock/lib/index.js:249:31)\nE           at exec (/nix/store/a4f03fnyb1njsg95d11hrirds8hfjsc1-appium-1.17.0/node_modules/appium-uiautomator2-driver/node_modules/async-lock/lib/index.js:124:9)\nE           at AsyncLock.acquire (/nix/store/a4f03fnyb1njsg95d11hrirds8hfjsc1-appium-1.17.0/node_modules/appium-uiautomator2-driver/node_modules/async-lock/lib/index.js:140:3)\nE           at AndroidUiautomator2Driver.executeCommand (/nix/store/a4f03fnyb1njsg95d11hrirds8hfjsc1-appium-1.17.0/node_modules/appium-uiautomator2-driver/node_modules/appium-base-driver/lib/basedriver/driver.js:343:39)\nE           at AppiumDriver.executeCommand (/nix/store/a4f03fnyb1njsg95d11hrirds8hfjsc1-appium-1.17.0/lib/appium.js:534:36)\nE           at runMicrotasks (<anonymous>)\nE           at processTicksAndRejections (internal/process/task_queues.js:97:5)\nE           at asyncHandler (/nix/store/a4f03fnyb1njsg95d11hrirds8hfjsc1-appium-1.17.0/node_modules/appium-base-driver/lib/protocol/protocol.js:309:21)\n\n..\\..\\.venv\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:125: InvalidSelectorException\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_search():\n    \n        with step('Searching \"Appium\"'):\n            browser.element((AppiumBy.ACCESSIBILITY_ID, \"Search Wikipedia\")).click()\n            browser.element((AppiumBy.ID, \"org.wikipedia.alpha:id/search_src_text\")).type('Appium')\n    \n        with step('Verify found page'):\n            results = browser.all((AppiumBy.ID, 'org.wikipedia.alpha:id/page_list_item_title'))\n            results.should(have.size_greater_than(0))\n            results.first.should(have.text('Appium'))\n    \n        with step ('Open \"Appium\" page'):\n>           browser.element((AppiumBy.NAME, \"Appium\")).click()\n\ntest_wikipedia.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\.venv\\Lib\\site-packages\\selene\\core\\entity.py:540: in click\n    self.wait.for_(\n..\\..\\.venv\\Lib\\site-packages\\selene\\core\\wait.py:150: in for_\n    return self._decorator(self)(logic)(fn)\n..\\..\\.venv\\Lib\\site-packages\\selene\\support\\_logging.py:104: in decorated\n    return for_(fn)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfn = <selene.core.wait.Command object at 0x0000024EC4937F20>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=getattr(reason, \"msg\", str(reason)),\n                    )\n                    # TODO: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    # TODO: should we have an option to turn on stacktrace logging?\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    # if it's a normal function, it should have __qualname__,\n                    # then use it, otherwise use str(fn)\n                    fn_name = getattr(\n                        fn,\n                        '__qualname__',\n                        getattr(fn, '__str__', lambda: str(fn))(),\n                    )\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn_name}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 10.0s, while waiting for:\nE                   browser.element(('name', 'Appium')).click\nE                   \nE                   Reason: InvalidSelectorException: Locator Strategy 'name' is not supported for this session; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE                   Screenshot: file://C:\\Users\\Андрей\\.selene\\screenshots\\1737572957702\\1737572957702.png\nE                   PageSource: file://C:\\Users\\Андрей\\.selene\\screenshots\\1737572957702\\1737572957702.html\n\n..\\..\\.venv\\Lib\\site-packages\\selene\\core\\wait.py:148: TimeoutException"}, "steps": [{"name": "Searching \"Appium\"", "status": "passed", "steps": [{"name": "element('accessibility id', 'Search Wikipedia'): click", "status": "passed", "start": 1737572991188, "stop": 1737572992753}, {"name": "element('id', 'org.wikipedia.alpha:id/search_src_text'): type: Appium", "status": "passed", "start": 1737572992753, "stop": 1737572994925}], "start": 1737572991188, "stop": 1737572994925}, {"name": "Verify found page", "status": "passed", "steps": [{"name": "all('id', 'org.wikipedia.alpha:id/page_list_item_title'): should have size greater than 0", "status": "passed", "start": 1737572994925, "stop": 1737572996532}, {"name": "all('id', 'org.wikipedia.alpha:id/page_list_item_title')[0]: should have text Appium", "status": "passed", "start": 1737572996532, "stop": 1737572996921}], "start": 1737572994925, "stop": 1737572996921}, {"name": "Open \"Appium\" page", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 10.0s, while waiting for:\nbrowser.element(('name', 'Appium')).click\n\nReason: InvalidSelectorException: Locator Strategy 'name' is not supported for this session; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nScreenshot: file://C:\\Users\\Андрей\\.selene\\screenshots\\1737572957702\\1737572957702.png\nPageSource: file://C:\\Users\\Андрей\\.selene\\screenshots\\1737572957702\\1737572957702.html\n\n", "trace": "  File \"E:\\Soft\\QA_Python\\qa_hmw19\\tests\\android_app\\test_wikipedia.py\", line 18, in test_search\n    browser.element((AppiumBy.NAME, \"Appium\")).click()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"E:\\Soft\\QA_Python\\qa_hmw19\\.venv\\Lib\\site-packages\\selene\\core\\entity.py\", line 540, in click\n    self.wait.for_(\n    ~~~~~~~~~~~~~~^\n        command.js.click(xoffset=xoffset, yoffset=yoffset)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<8 lines>...\n        )\n        ^\n    )\n    ^\n  File \"E:\\Soft\\QA_Python\\qa_hmw19\\.venv\\Lib\\site-packages\\selene\\core\\wait.py\", line 150, in for_\n    return self._decorator(self)(logic)(fn)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^\n  File \"E:\\Soft\\QA_Python\\qa_hmw19\\.venv\\Lib\\site-packages\\selene\\support\\_logging.py\", line 104, in decorated\n    return for_(fn)\n  File \"E:\\Soft\\QA_Python\\qa_hmw19\\.venv\\Lib\\site-packages\\selene\\core\\wait.py\", line 148, in logic\n    raise self._hook_failure(failure)\n"}, "steps": [{"name": "element('name', 'Appium'): click", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 10.0s, while waiting for:\nbrowser.element(('name', 'Appium')).click\n\nReason: InvalidSelectorException: Locator Strategy 'name' is not supported for this session; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nScreenshot: file://C:\\Users\\Андрей\\.selene\\screenshots\\1737572957702\\1737572957702.png\nPageSource: file://C:\\Users\\Андрей\\.selene\\screenshots\\1737572957702\\1737572957702.html\n\n", "trace": "  File \"E:\\Soft\\QA_Python\\qa_hmw19\\.venv\\Lib\\site-packages\\selene\\support\\_logging.py\", line 104, in decorated\n    return for_(fn)\n  File \"E:\\Soft\\QA_Python\\qa_hmw19\\.venv\\Lib\\site-packages\\selene\\core\\wait.py\", line 148, in logic\n    raise self._hook_failure(failure)\n"}, "start": 1737572996921, "stop": 1737573008724}], "start": 1737572996921, "stop": 1737573008726}], "attachments": [{"name": "stdout", "source": "34eeebf3-145e-4916-8384-fb689e1e5e14-attachment.txt", "type": "text/plain"}], "start": 1737572991188, "stop": 1737573008728, "uuid": "4fc08af3-b281-48bc-b094-c8495a6bbbe1", "historyId": "a41b8730c36cd71229ae59575c14d43d", "testCaseId": "a41b8730c36cd71229ae59575c14d43d", "fullName": "tests.android_app.test_wikipedia#test_search", "labels": [{"name": "parentSuite", "value": "tests.android_app"}, {"name": "suite", "value": "test_wikipedia"}, {"name": "host", "value": "Katz-PC"}, {"name": "thread", "value": "20368-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.android_app.test_wikipedia"}]}